version: "3.9"

services:
  #userdb: sql server
  userdb:
    container_name: userdb
    environment:
      SA_PASSWORD: "Magicgame123456"
      ACCEPT_EULA: "Y"
    restart: always
    volumes:
      - sqlserver_user_data:/var/opt/mssql
    ports:
      - "1435:1433"
  #redisuserdb: redis
  redisuserdb:
    container_name: redisuserdb
    restart: always
    ports:
      - "6379:6379"
  #redismangadb: redis
  redismangadb:
    container_name: redismangadb
    restart: always
    ports:
      - "6380:6379"
  #mangadb: sql server
  mangadb:
    container_name: mangadb
    environment:
      SA_PASSWORD: "Magicgame123456"
      ACCEPT_EULA: "Y"
    restart: always
    volumes:
      - sqlserver_manga_data:/var/opt/mssql
    ports:
      - "1436:1433"
  mangahangfiredb:
    container_name: mangahangfiredb
    environment:
      SA_PASSWORD: "Magicgame123456"
      ACCEPT_EULA: "Y"
    restart: always
    volumes:
      - sqlserver_manga_hangfire_data:/var/opt/mssql
    ports:
      - "1437:1433"
  #infrastructure section
  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    hostname: rabbitmq

  portainer:
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
  elasticsearch:
    container_name: elasticsearch
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - xpack.security.enabled=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - ELASTIC_USERNAME=elastic #default username
      - ELASTIC_PASSWORD=admin
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data\
  kibana:
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=admin
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    healthcheck:
      test: curl -s http://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
  #microservices api sections
  user.api:
    container_name: user.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - "DatabaseSettings:ConnectionString=Server=userdb;Database=UserDb;User Id=sa;Password=Magicgame123456;Multipleactiveresultsets=true;TrustServerCertificate=true"
      - "RedisSettings:ConnectionString=redisuserdb:6379"
    depends_on:
      - userdb
      - rabbitmq
    ports:
      - "6001:80"
    restart: always
  manga.api:
    container_name: manga.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - "DatabaseSettings:ConnectionString=Server=mangadb;Database=MangaDb;User Id=sa;Password=Magicgame123456;Multipleactiveresultsets=true;TrustServerCertificate=true"
      - "DatabaseSettings:ConnectionHangfireString=Server=mangahangfiredb;Database=HangfireMangaDb;User Id=sa;Password=Magicgame123456;Multipleactiveresultsets=true;TrustServerCertificate=true"
      - "RedisSettings:ConnectionString=redismangadb:6379"
    depends_on:
      - mangadb
      - rabbitmq
      - mangahangfiredb
    ports:
      - "6002:80"
    restart: always
  azure.api:
    container_name: azure.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "6003:80"
    restart: always
  elasticsearch.api:
    container_name: elasticsearch.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "6005:80"
    restart: always

  webstatus:
    container_name: webstatus
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - HealthChecksUI__HealthChecks__0__Name=User Health Check
      - HealthChecksUI__HealthChecks__0__Uri=http://user.api/hc
      - HealthChecksUI__HealthChecks__1__Name=Manga Health Check
      - HealthChecksUI__HealthChecks__1__Uri=http://manga.api/hc
      - HealthChecksUI__HealthChecks__2__Name=Azure Blob Health Check
      - HealthChecksUI__HealthChecks__2__Uri=http://azure.api/hc
      - HealthChecksUI__HealthChecks__3__Name=Elastic Search Health Check
      - HealthChecksUI__HealthChecks__3__Uri=http://elasticsearch.api/hc
    ports:
      - "6010:80"